#!/bin/bash
set -e

# Parse arguments
for arg in "$@"; do
    case $arg in
        --lib=*)
        LIB_PATH="${arg#*=}"
        shift
        ;;
        --mvec_h=*)
        MVEC_H_PATH="${arg#*=}"
        shift
        ;;
        --jextract=*)
        JEXTRACT_PATH="${arg#*=}"
        shift
        ;;
        --out=*)
        ALGEBRA_DIR="${arg#*=}"
        shift
        ;;
        *)
        # Unknown argument, ignore for now to allow optional jextract
        ;;
    esac
done

if [ -z "$LIB_PATH" ] || [ -z "$MVEC_H_PATH" ]; then
    echo "Usage: $0 --lib=<path> --mvec_h=<path> [--jextract=<path>] [--out=<path>]"
    echo ""
    echo "This script generates Java bindings for a Geometric Algebra library generated by Garamon."
    echo "Garamon is a C++ library generator for Geometric Algebra."
    echo ""
    echo "Arguments:"
    echo "  --lib=<path>      Path to the native library (e.g., libc5ga.so, c5ga.dll)."
    echo "  --mvec_h=<path>   Path to the C header file (e.g., Mvec.h) for jextract."
    echo "  --jextract=<path> Path to the jextract tool executable (optional). If not provided, jextract must be in PATH."
    echo "  --out=<path>      Output directory for the generated algebra project (optional). Default is 'build'."
    exit 1
fi

# Must be launched from script directory
SCRIPT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -W 2>/dev/null || pwd)
if [ "$PWD" != "$SCRIPT_DIR" ]; then
  echo "Run this script from its own directory: $SCRIPT_DIR"
  exit 1
fi


# Check for jextract, java, and javac commands
if [ -z "$JEXTRACT_PATH" ]; then
    if ! command -v jextract &> /dev/null; then
        echo "Error: jextract command not found. Please provide --jextract=<path> or ensure jextract is in your PATH."
        exit 1
    fi
    JEXTRACT_PATH=$(command -v jextract)
fi

if ! command -v java &> /dev/null; then
    echo "Error: java command not found. Please install Java or ensure it is in your PATH."
    exit 1
fi

if ! command -v javac &> /dev/null; then
    echo "Error: javac command not found. Please install Java Development Kit (JDK) or ensure it is in your PATH."
    exit 1
fi

# Define variables
ALGEBRA_DIR=${ALGEBRA_DIR:=build}
ALGEBRA_SRC="$ALGEBRA_DIR/src"
ALGEBRA_LIBS="$ALGEBRA_DIR/libs"
RESOURCES_DIR="$ALGEBRA_SRC/main/resources"
NATIVE_DIR="$RESOURCES_DIR/natives"
TEMPLATES_DIR="templates"
STATIC_DIR="static"

LIB_FILENAME=$(basename "$LIB_PATH")
NO_PREFIX=${LIB_FILENAME#lib}
LIB_LOGICAL_NAME=${NO_PREFIX%%.*}
ALGEBRA_PKG_NAME="org.garamon.$LIB_LOGICAL_NAME"
ALGEBRA_PKG_DIR=$ALGEBRA_SRC/main/java/org/garamon/$LIB_LOGICAL_NAME
trap 'rm -rf "$TMP_CLASSES_DIR"' EXIT
TMP_CLASSES_DIR=$(mktemp -d)


echo "Preparing algebra skeleton in $ALGEBRA_DIR"
mkdir -p $ALGEBRA_DIR
cp -r $STATIC_DIR/* $ALGEBRA_DIR
# no readlink -f in git bash windows
ALGEBRA_DIR_ABS=$(cd "$ALGEBRA_DIR" && pwd -W 2>/dev/null || pwd)
(
    cd "$TEMPLATES_DIR"
    find . -type f | while read f; do
        nf=$(echo "$f" | sed "s#^\./##; s/GENERIC/${LIB_LOGICAL_NAME}/g")
        mkdir -p "$(dirname "$ALGEBRA_DIR_ABS/$nf")"
        echo $ALGEBRA_DIR/$nf
        sed "s/GENERIC/${LIB_LOGICAL_NAME}/g" "$f" > "$ALGEBRA_DIR_ABS/$nf"
    done
)

echo "Copying native library and writing properties"
OS=$(uname -s)
case "$OS" in
    Linux*)   NATIVE_CLASSIFIER="linux-x86_64";;
    Darwin*)  NATIVE_CLASSIFIER="macos-aarch64";;
    CYGWIN*|MINGW*|MSYS*) NATIVE_CLASSIFIER="win-x64";;
    *)        NATIVE_CLASSIFIER="unknown";;
esac
TARGET_NATIVE_DIR="$NATIVE_DIR/$NATIVE_CLASSIFIER"

mkdir -p $TARGET_NATIVE_DIR
cp "$LIB_PATH" "$TARGET_NATIVE_DIR/"
LIB_PATH="$TARGET_NATIVE_DIR/$LIB_FILENAME"

sed -i s/UNKNOWN/$NATIVE_CLASSIFIER/ $RESOURCES_DIR/native-lib.properties

echo "Algebra prepared at: $(realpath "$ALGEBRA_DIR")"

echo "Running jextract"
"$JEXTRACT_PATH" \
    -t "$ALGEBRA_PKG_NAME" \
    -l ":$(realpath "$LIB_PATH")" \
    --output "$(realpath "$ALGEBRA_SRC/main/java")" \
    "$MVEC_H_PATH"

echo "Compiling the minimal parser"
javac -d "$TMP_CLASSES_DIR" $ALGEBRA_PKG_DIR/GaramonParser.java $ALGEBRA_PKG_DIR/Mvec_h.java

echo "Running parser for java sources"
java --enable-native-access=ALL-UNNAMED -cp "$TMP_CLASSES_DIR" -Djava.library.path="$(realpath "$TARGET_NATIVE_DIR")" \
    "$ALGEBRA_PKG_NAME.GaramonParser" \
    --inplace \
    $(find $ALGEBRA_DIR -name "*.java" | grep -v Mvec_h.java)


echo "Building final package"
(cd $ALGEBRA_DIR && ./gradlew build)

echo "Testing final package"
(cd $ALGEBRA_DIR && ./gradlew test)

echo "Publishing to MavenLocal"
(cd $ALGEBRA_DIR && ./gradlew publishToMavenLocal)

